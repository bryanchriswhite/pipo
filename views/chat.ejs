<!doctype html>
<html>
  <head>
    <title>PiPo</title>
  </head>
  <body>
    <div id="mainContainer">
      <ul id="messages">
      </ul>
      <div id="menu">
        <div id="left-menu-profile">
        </div>
        <div id="left-menu-scroll">
          <div class="room-list-container">
            <h5 class="room-list-header">Rooms</h5>
            <ul id="room-list">
              <li class="room-list-item">#general</li>
            </ul>
          </div>
          <div class="user-list-container">
            <h5 class="user-list-header">Users</h5>
            <div id="user-list">
            </div>
          </div>
        </div>
        <div id="menu-actions">
        </div>
      </div>
    </div>
    <div class="input-container" id="input-container">
      <form>
        <div id="message-input-container" class="ui left fluid action icon input loading">
          <textarea id="message-input" class="message-input ui left icon loading" autocorrect="off" spellcheck="true" autocomplete="off" type="text" placeholder="          Please wait while your secure connection is configured..."></textarea>
          <i id="loading-icon" class="search icon"></i>
          <button id="send-button" class="ui button" disabled="true">Send</button>
        </div>
      </form>
    </div>
    <div class="ui small modal initial">
      <div class="header">Generate or Authenticate</div>
      <div class="content">No localStorage credentials were found, would you like to generate new credentials or authenticate using existing ones?</div>
      <div class="actions">
        <div class="ui button approve green generate" data-value="generate">Generate</div>
        <div class="ui button approve blue authenticate" data-value="authenticate">Authenticate</div>
      </div>
    </div>
    <div class="ui small modal create">
      <div class="header">Create</div>
      <div class="content">Select a username and a passphrase to encrypt your keys</div>
      <form class="ui form" style="padding: 20px;">
        <div class="field">
          <label for="username">Name</label>
          <input type="text" class="username" id="username">
        </div>
        <div class="field">
          <label for="password">Password</label>
          <input type="password" class="password" id="password">
        </div>
        <div class="field">
          <label for="confirmPassword">Confirm Password</label>
          <input type="password" class="password" id="confirmPassword">
        </div>
      </form>
      <div class="actions">
        <div class="ui button approve green go" data-value="go">Go</div>
      </div>
    </div>
    <div class="ui small modal generate">
      <div class="header">Generate</div>
      <div class="content center">
        <i class="notched circle loading icon"></i> Generating credentials (this may take a bit)
      </div>
    </div>
    <div class="ui small modal authenticate">
      <div class="header">Authenticate</div>
      <div class="content">Please select your credentials</div>
      <div class="actions">
        <div class="ui button approve green" data-value="generate">Generate</div>
        <div class="ui button approve blue" data-value="authenticate">Authenticate</div>
      </div>
    </div>
    <link rel="stylesheet" href="/css/semantic.css">
    <link rel="stylesheet" href="/css/pipo.css">
    <link rel="stylesheet" href="/css/highlight.js/styles/default.css">

    <script src="/js/lib/openpgp.js"></script>
    <script src="/js/lib/kbpgp.js"></script>
    <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/1.12.2/semantic.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/lib/highlight.min.js"></script>

    <script src="/js/socketClient.js"></script>
    <script src="/js/encryptionManager.js"></script>
    <script src="/js/chat.js"></script>
    <script src="/js/marked.js"></script>

    <script>
      hljs.initHighlightingOnLoad();
      openpgp.initWorker('/js/lib/openpgp.worker.js');
      window.socketClient = new SocketClient();

      initialize();

      function initialize() {
        window.username = localStorage.getItem("username");
        window.encryptionManager.loadClientKeyPair(function(err, loaded) {
          if (err) {
            //Show error somewhere
          }
          if (!loaded) {
            return promptForCredentials();
          }
          return window.socketClient.authenticate();
        });
      }

      function promptForCredentials() {
        $(".ui.modal.initial")
          .modal('setting', 'closable', false)
          .modal("show");

        $('.ui.modal.create')
          .modal("attach events", ".ui.modal.initial .button.generate")
          .modal('setting', 'closable', false)
          .modal('setting', 'debug', true)
          .modal("setting", {
            onShow: function() {
              console.log("Showing create");
            },
            onApprove: function() {
              //TODO: Check for username collision
              username = $('#username').val();

              if (username) {
                console.log('has username, go');
                $('.ui.modal.generate').modal('show');
                return true;
              }
              console.log("no username, do nothing");
              return false;
            }
          });

        $('.ui.modal.generate')
          .modal('setting', 'closable', false)
          .modal("setting", {
            onShow: function() {
              var self = this;
              generateClientKeyPair(2048, username, "temporaryPassphrase", function(err, generatedKeypair) {
                if (err) {
                  console.log("Error generating client keypair: "+err);
                } else {
                  console.log("Generated client key pair.");
                  localStorage.setItem('username', username);
                  localStorage.setItem('keyPair', JSON.stringify(keyPair));
                  $('.ui.modal.generate').modal('hide');
                  initialize();
                }
              });
            }
          });
      }
    </script>


  </body>
</html>
