function fitToContent(e,a){var t=e&&e.style?e:document.getElementById(e);if(t){t.clientHeight==t.scrollHeight&&(t.style.height="30px");var n=t.clientHeight;(!a||a>n)&&(n=Math.max(t.scrollHeight,n),a&&(n=Math.min(a,n)),n>t.clientHeight&&(t.style.height=n+"px"))}}function dynamicSort(e){var a=1;return"-"===e[0]&&(a=-1,e=e.substr(1)),function(t,n){var o=t[e]<n[e]?-1:t[e]>n[e]?1:0;return o*a}}function EncryptionManager(){this.keyPair={publicKey:null,privateKey:null},this.encryptionScheme={},this.keyManager=null,this.masterKeyManager=null,this.keyRing=new window.kbpgp.keyring.KeyRing,this.clientCredentialsLoaded=!1,this.masterCredentialsLoaded=!1,this.clientCredentailsDecrypted=!1,this.masterCredentailsDecrypted=!1}function SocketClient(){var e=this,a=window.location.host;this.socket=window.io(a+"/socket"),window.username=localStorage.getItem("username"),window.email=localStorage.getItem("email"),window.fullName=localStorage.getItem("fullName"),this.socket.on("connect",function(){console.log("Connected to socket.io server")}),this.socket.on("certificate",function(a){console.log("[socketClient] (certificate) Got server certificate. Verifying..."),window.encryptionManager.verifyCertificate(a,function(a){console.log("[socketClient] (certificate) Veritifed server certificate! Authenticating with server."),e.init()})}),this.socket.on("connect_error",function(a){console.log("[SOCKET] (connection error) Disabling chat!",a),e.listeners&&ChatManager.disableChat()})}var Authentication={};Authentication.authenticate=function(e){var a=e.socket;console.log("[AUTH] Authenticating with server with username: '"+window.username+"'"),window.encryptionManager.keyManager.sign({},function(e){window.encryptionManager.keyManager.export_pgp_public({},function(e,t){a.emit("authenticate",{username:window.username,fullName:window.fullName,publicKey:t,email:window.email})})})},Authentication.authenticated=function(e){var a=e.favoriteRooms,t=(e.defaultRoomId,e.userNameMap),n=e.userlist,o=e.userProfile;return clientNotification.init(),"ok"!==e.message?console.log("[SOCKET CLIENT] (addListeners) Error from server during authentication"):(window.activeChat&&(ChatManager.activeChat=window.activeChat),ChatManager.defaultRoomId=e.defaultRoomId,ChatManager.updateUserlist(n),ChatManager.userNameMap=t,ChatManager.userProfile=o,ChatManager.updateProfileHeader(),void window.encryptionManager.keyManager.sign({},function(e){window.encryptionManager.keyManager.export_pgp_public({},function(e,t){window.encryptionManager.verifyRemotePublicKey(window.username,t,function(e,n){if(e)return console.log("[INIT] Error updating remote public key: "+e);if(n)if(console.log("[INIT] Your public key matches what is on the server"),console.log("[AUTHENTICATED] Authenticated successfully"),a.length>0)a.forEach(function(e){console.log("[SOCKET] (authenticated) Joining room ",e),e&&"undefined"!=typeof e&&socketClient.joinRoom(e,function(a){console.log("[SOCKET] (authenticated) Sent join request for room "+e)})});else{var o=ChatManager.defaultRoomId;console.log("[SOCKET] (authenticated) Joining room ",o),socketClient.joinRoom(o,function(e){console.log("[SOCKET] (authenticated) Joined default room becuase favoriteRooms was empty")})}else console.log("[INIT] Remote public key is not up to date so updating!"),window.encryptionManager.updatePublicKeyOnRemote(window.username,t,function(e){return e?console.log("[INIT] ERROR updating public key on server: "+e):(console.log("[AUTHENTICATED] Authenticated successfully"),void a.forEach(function(e){console.log("[SOCKET] (authenticated) Joining room ",e),socketClient.joinRoom(e,function(a){console.log("[SOCKET] (authenticated) Sent join request for room "+e)})}))})})})}))};var userMap={},roomUsers={},ChatManager={};ChatManager.chats={},ChatManager.userlist={},ChatManager.userNameMap={},ChatManager.userProfile={},ChatManager.activeChat=null,ChatManager.lastActiveChat=null;var host=window.location.host,socket=io(host+"/main"),clientKeyPassword=null,masterKeyPassword="pipo",amountOfSpaceNeeded=5e6,defaultRoomId=null,keyPair={publicKey:null,privateKey:null},encryptedMasterKeyPair={publicKey:null,privateKey:null},masterKeyPair={publicKey:null,privateKey:null},username=null;marked.setOptions({renderer:new marked.Renderer,gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanatize:!0,smartLists:!0,smartypants:!1,highlight:function(e){return hljs.highlightAuto(e).value}}),$("#message-input").unbind().keyup(function(e){if(13==e.keyCode&&e.shiftKey){var a=this.value,t=ChatManager.getCaret(this);this.value=a.substring(0,t)+a.substring(t,a.length),e.stopPropagation(),console.log("got shift+enter");var n=$("#message-input");return fitToContent("message-input",156),n[0].scrollTop=n[0].scrollHeight,!1}13==e.keyCode&&ChatManager.sendMessage(function(){return fitToContent("message-input",156),!1})}),$(".dropdown").dropdown({transition:"drop"}),$("#edit-profile-button").unbind().on("click",function(){return console.log("Editing users profile"),ChatManager.editProfile(),!1}),$("#generate-keypair-button").unbind().on("click",function(){console.log("Regenerating client keypair"),ChatManager.promptForCredentials(function(){})}),$("#import-keypair-button").unbind().on("click",function(){console.log("Loading keypair from file..."),ChatManager.promptForImportKeyPair(function(e,a){var t={privateKey:a.privateKey,publicKey:a.publicKey},n=a.username;window.encryptionManager.saveClientKeyPair({username:n,keyPair:t},function(e){return e?console.log("Error saving client keyPair"):(console.log("Client keypair saved to local storage"),void window.encryptionManager.unloadClientKeyPair(function(){window.socketClient.init()}))})})}),$("#export-keypair-button").unbind().on("click",function(){console.log("Exporting keypair to file");var e=window.localStorage.getItem("keyPair");if(!e)return console.log("No keypair data to export to file"),ChatManager.showError("No keypair data exists to export to file");var a=JSON.parse(e);console.log("Got keyPair data to export");var t=function(){return window.Blob},n=t();saveAs(new n([a.publicKey.toString()],{type:"text/plain;charset="+document.characterSet}),window.username+".pub");var n=t();saveAs(new n([a.privateKey.toString()],{type:"text/plain;charset="+document.characterSet}),window.username+".key")});var buildCreateRoomModal=function(){console.log("Building create room modal"),$(".modal.createroom").modal({detachable:!0,closable:!1,transition:"fade up",onApprove:function(){return $(".ui.form.createroom").submit(),!1}}),$("#add-room-button").unbind().click(function(e){$(".ui.form.createroom").trigger("reset"),$(".ui.form.createroom .field.error").removeClass("error"),$(".ui.form.createroom.error").removeClass("error"),$(".modal.createroom").modal("show")})};$(document).ready(buildCreateRoomModal);var formValidationRules={name:{identifier:"name",rules:[{type:"empty",prompt:"Please enter a valid room name"}]},topic:{identifier:"topic",optional:!0,rules:[{type:"empty",prompt:"Please enter a valid room topic"}]}},createRoomFormSettings={onSuccess:function(){$(".modal.createroom").modal("hide");var e={name:$('.ui.form.createroom input[name="name"]').val(),topic:$('.ui.form.createroom input[name="topic"]').val(),encryptionScheme:$(".dropdown.encryptionscheme .selected").data().value,keepHistory:"keep"===$(".dropdown.messagehistory .selected").data().value,membershipRequired:"private"===$(".dropdown.membershiprequired .selected").data().value};return socketClient.createRoom(e,function(a){return a?console.log("Error creating room: "+a):void console.log("Sent request to create room "+e.name)}),!1}};$(".ui.form.createroom").form(formValidationRules,createRoomFormSettings);var buildRoomListModal=function(){$(".modal.join-room-list-modal").modal({detachable:!0,closable:!0,transition:"fade up"}),$("#room-list-button").unbind().click(function(e){var a,t="";Object.keys(ChatManager.chats).forEach(function(e){a=ChatManager.chats[e].name,"room"==ChatManager.chats[e].type&&(t+="<div class='item'>\n",t+=ChatManager.chats[e].membershipRequired?"  <i class='ui avatar huge lock icon room-list-avatar'></i>\n":"  <i class='ui avatar huge unlock alternate icon room-list-avatar'></i>\n",t+="  <div class='content'>\n",t+="    <a id='"+e+"' class='header'>"+a+"</a>\n",t+="    <div class='description'>"+ChatManager.chats[e].topic+"</div>\n",t+="  </div>\n",t+="</div>\n")}),$(".modal.join-room-list-modal .join-room-list").html(t),Object.keys(ChatManager.chats).forEach(function(e){"room"==ChatManager.chats[e].type&&$('.modal.join-room-list-modal a[id="'+e+'"]').unbind().click(function(){socketClient.joinRoom(e,function(a){return $(".modal.join-room-list-modal").modal("hide"),a?console.log("Error joining room: "+a):(ChatManager.lastActiveChat=ChatManager.activeChat,ChatManager.activeChat=e,void console.log("Joined room "+ChatManager.chats[e].name))})})}),$(".modal.join-room-list-modal").modal("show")})};$(document).ready(buildRoomListModal),$(".chat-header__settings .room-options.leave-room").unbind().click(function(e){var a=ChatManager.activeChat,t=ChatManager.chats[a].name;"chat"==ChatManager.chats[a].type?(console.log("Destroying chat '",t,"'"),ChatManager.destroyChat(a,function(e){console.log("Chat destroyed. Updating private chats..."),ChatManager.updateChatList()})):socketClient.partRoom({chatId:a},function(e){console.log("Sent request to part room "+t)})});var buildEditRoomModal=function(){$(".modal.editroom").modal({detachable:!0,closable:!1,transition:"fade up",onApprove:function(){return $(".ui.form.editroom").submit(),!1}}),$(".chat-header__settings .room-options.edit-room").unbind().click(function(e){var a=ChatManager.activeChat,t={id:a,name:ChatManager.chats[a].name,group:ChatManager.chats[a].group,topic:ChatManager.chats[a].topic,encryptionScheme:ChatManager.chats[a].encryptionScheme,keepHistory:ChatManager.chats[a].keepHistory,membershipRequired:ChatManager.chats[a].membershipRequired};$(".modal.editroom .form").trigger("reset"),ChatManager.populateEditRoomModal(t),$(".modal.editroom").modal("show")})};$(document).ready(buildEditRoomModal);var editRoomFormSettings={onSuccess:function(){$(".modal.editroom").modal("hide");var e={id:$('.ui.form.editroom input[name="id"]').val(),name:$('.ui.form.editroom input[name="name"]').val(),topic:$('.ui.form.editroom input[name="topic"]').val(),encryptionScheme:$(".ui.form.editroom .dropdown.encryptionscheme .selected").data().value,keepHistory:$(".ui.form.editroom .dropdown.keephistory .selected").data().value,membershipRequired:$(".ui.form.editroom .dropdown.membershiprequired .selected").data().value};return console.log("Sending room update socket request with data:",e),socketClient.updateRoom(e,function(a){return a?console.log("Error creating room: "+a):void console.log("Sent request to update room "+e.name)}),!1}},editRoomFormValidationRules={name:{identifier:"name",rules:[{type:"empty",prompt:"Please enter a valid room name"}]},topic:{identifier:"topic",optional:!0,rules:[{type:"empty",prompt:"Please enter a valid room topic"}]}};$(".ui.form.editroom").form(editRoomFormValidationRules,editRoomFormSettings),$(".chat-header__settings .room-options.manage-members").unbind().click(function(e){ChatManager.populateManageMembersModal({chatId:ChatManager.activeChat,clearMessages:!0}),$(".manage-members-modal").modal("show")}),ChatManager.populateEditRoomModal=function(e){$('.modal.editroom [name="id"]').val(e.id),$('.modal.editroom [name="name"]').val(e.name),$('.modal.editroom [name="group"]').val(e.group),$('.modal.editroom [name="topic"]').val(e.topic),$('.modal.editroom [name="encryptionscheme"]').val(e.encryptionScheme),$(".modal.editroom .keephistory").dropdown("set selected",e.keepHistory),$(".modal.editroom .membershiprequired").dropdown("set selected",e.membershipRequired)},ChatManager.populateManageMembersModal=function(e){if(e||(e={}),ChatManager.activeChat&&ChatManager.chats[ChatManager.activeChat]){var a="undefined"==typeof e.chatId?ChatManager.activeChat:e.chatId,t=ChatManager.chats[a].name,n="undefined"==typeof e.clearMessages?!0:e.clearMessages,o=ChatManager.chats[a].members||[],r=ChatManager.chats[a].admins||[],i=ChatManager.chats[a].owner;n&&($(".manage-members-modal #manageMembersError").text(""),$(".manage-members-modal #manageMembersMessage").text(""));var s=$(".manage-members-modal .manage-members-list");$(".manage-members-modal .chatname").val(t),$(".manage-members-modal").attr("id",a),s.empty();var c={},l=[];Object.keys(ChatManager.userNameMap).forEach(function(e){l.push({title:e})}),$(".ui.modal.manage-members-modal .ui.search").search({source:l}),o.forEach(function(e){c[e]="member"}),i&&(c[i]="owner"),r.forEach(function(e){c[e]="admin"}),Object.keys(c).forEach(function(e){var a=c[e],t=ChatManager.userlist[e].username,n=$("<li/>").addClass("manage-members-list-item").addClass(t).appendTo(s),o=($("<span/>").addClass("manage-members-list-member").text(t).appendTo(n),$("<div/>").addClass("manage-members-list-options").appendTo(n));$("<select/>").addClass("ui").addClass("dropdown").addClass("manage-members-list-membership-dropdown").html('<option class="member">member</option><option class="admin">admin</option><option class="owner">owner</option><option class="remove">remove</option>').appendTo(o),$("<button/>").attr("id",e).addClass("ui").addClass("primary").addClass("button").addClass("save").addClass(e).text("Save").appendTo(o);$(".manage-members-list-item."+t+" ."+a).prop("selected","true"),$(".manage-members-list .button.save."+e).unbind().click(function(e){console.log("[ADD MEMBER] Caught membership save button click");var a=($(".manage-members-modal .chatname").val(),$(".manage-members-modal").attr("id")),t=e.currentTarget.id,n=e.currentTarget.previousSibling.value,o={type:"modify",member:t,chatId:a,membership:n};socketClient.membership(o)})})}},$(".manage-members-modal .button.addmember").unbind().click(function(e){console.log("[ADD MEMBER] Caught add member button click");var a=$(".manage-members-modal .membername").val(),t=$(".manage-members-modal").attr("id"),n=$(".manage-members-modal .membership .selected").text(),o=ChatManager.userNameMap[a.toLowerCase()],r={type:"add",memberId:o,memberName:a,chatId:t,membership:n};console.log("[ADD MEMBER] Sending membership data to socketClient"),socketClient.membership(r),$(".manage-members-modal .membername").val("")}),ChatManager.init=function(){window.username&&ChatManager.updateProfileHeader()},ChatManager.showError=function(e){$(".ui.modal.error").modal("setting","closable",!1).modal("show"),$(".ui.modal.error .content").text(e)},ChatManager.showErrorOnModal=function(e){e.message,e.modal},ChatManager.updateProfileHeader=function(){var e="0";ChatManager.userlist[ChatManager.userNameMap[window.username]]&&(e=ChatManager.userlist[ChatManager.userNameMap[window.username]].emailHash||"0"),$("#menu-header-profile .ui.dropdown").dropdown({action:"select"}),$("#menu-header-profile .ui.dropdown .avatar").attr("style","background-image: url('https://www.gravatar.com/avatar/"+e+"?s=64')"),$("#menu-header-profile .ui.dropdown .text.username").text(window.username)},ChatManager.getCaret=function(e){if(e.selectionStart)return e.selectionStart;if(document.selection){e.focus();var a=document.selection.createRange();if(null==a)return 0;var t=e.createTextRange(),n=t.duplicate();return t.moveToBookmark(a.getBookmark()),n.setEndPoint("EndToStart",t),n.text.length}return 0},ChatManager.updateUserlist=function(e){ChatManager.userlist=e,Object.keys(e).forEach(function(a){e[a].publicKey&&window.encryptionManager.getKeyInstance(e[a].publicKey,function(e){ChatManager.userlist[a].keyInstance=e})})},ChatManager.initRoom=function(e,a){var t=this,n=!1,o=!1,r=!1,i=0;console.log("Running initRoom for "+e.name),t.chats[e.id]&&(n=t.chats[e.id].enabled,o=t.chats[e.id].joined,r=t.chats[e.id].unreadCount,i=t.chats[e.id].unread),t.chats[e.id]={id:e.id,activeUsers:e.activeUsers,admins:e.admins,decryptedMessages:"",enabled:n,encryptionScheme:e.encryptionScheme,group:e.group,joined:o,keepHistory:e.keepHistory,members:e.members,membershipRequired:e.membershipRequired,messages:e.messages,messageCache:"",name:e.name,owner:e.owner,subscribers:e.subscribers,type:"room",topic:e.topic,unread:r,unreadCount:i};var s=t.chats[e.id].messages.sort(dynamicSort("date")),c=0,l=Array(s.length);encryptionManager.buildChatKeyRing({chatId:e.id},function(a){ChatManager.chats[e.id].keyRing=a,s.forEach(function(a,n){window.encryptionManager.decryptMessage({keyRing:ChatManager.chats[e.id].keyRing,encryptedMessage:a.encryptedMessage},function(o,r){var r=(a.encryptedMessage,r);window.encryptionManager.keyManager.get_pgp_key_id().toString("hex");if(o&&(r="This message was not encrypted to you...\n",console.log("Error decrypting message : ")),l[n]=r.toString(),c++,s.length===c){l.forEach(function(a,n){t.chats[e.id].messages[n].fromUser,t.chats[e.id].messages[n].date;t.chats[e.id].messages[n].decryptedMessage=a}),ChatManager.populateMessageCache(e.id);var i=ChatManager.userProfile.membership.favoriteRooms.indexOf(e.id)>-1;if(!ChatManager.activeChat&&i&&ChatManager.setActiveChat(e.id),ChatManager.activeChat==e.id){var g=$("#chat");ChatManager.refreshChatContent(e.id),g[0].scrollTop=g[0].scrollHeight}ChatManager.setChatEnabled([e.id]),ChatManager.updateChatStatus()}})}),0==s.length&&(ChatManager.setChatEnabled([e.id]),ChatManager.updateChatStatus())}),t.updateRoomList(function(e){console.log("Update room list done..."),a(null)})},ChatManager.initChat=function(e,a){var t=this,n=!1,o=e.id,r=ChatManager.userNameMap[window.username],i="",s=!1,c=0,l=e.messages.sort(dynamicSort("date")),g=e.participants||[];console.log("Running init on chat "+o),ChatManager.chats[o]&&(s=ChatManager.chats[o].unread,c=ChatManager.chats[o].unreadCount,n=ChatManager.chats[o].enabled),2==e.participants.length&&e.participants.forEach(function(e){e!==r&&(i=ChatManager.userlist[e].username)}),console.log("[chatManager.initChat] chatName set to: "+i),g.length>2,t.chats[o]={enabled:n,id:o,messages:l,messageCache:"",name:i,participants:g,type:"chat",unread:s,unreadCount:c};var d=0,u=Array(l.length),h=function(){if(ChatManager.populateMessageCache(o),t.updateChatList(),ChatManager.activeChat==o){var e=$("#chat");ChatManager.refreshChatContent(o),e[0].scrollTop=e[0].scrollHeight}return ChatManager.setChatEnabled([o]),ChatManager.updateChatStatus(),a(null)};encryptionManager.buildChatKeyRing({chatId:o},function(e){ChatManager.chats[o].keyRing=e,0==l.length&&h(),l.forEach(function(e,a){window.encryptionManager.decryptMessage({keyRing:ChatManager.chats[o].keyRing,encryptedMessage:e.encryptedMessage},function(n,r){var r=(e.encryptedMessage,r);d++,n&&(r="Unable to decrypt...\n",console.log("Error decrypteing message: ",n)),u[a]=r.toString(),console.log("[initChat] messages.length '"+l.length+"' count '"+d+"'"),l.length===d&&(u.forEach(function(e,a){l[a].fromUser,l[a].date;t.chats[o].messages[a].decryptedMessage=e}),h())})})})},ChatManager.arrayHash=function(e,a){var t=e.sort();encryptionManager.sha256(t.toString()).then(function(e){return a(e)})},ChatManager.updateFavoriteButton=function(e){var a=e.favorite;a&&$(".chat-header__buttons .star.icon").removeClass("empty"),a||$(".chat-header__buttons .star.icon").addClass("empty")},ChatManager.updateChatHeader=function(e){var a=this,t=ChatManager.chats[e],n="",o="",r="",i=ChatManager.activeChat;"chat"==t.type?(n='<i class="huge spy icon"></i>',o="One to one encrypted chat with "+t.name,r="pm/"+t.name):(n='<i class="huge comments outline icon"></i>',o=ChatManager.chats[e].topic,r=ChatManager.chats[e].group+"/"+t.name);var s=ChatManager.userProfile.membership.favoriteRooms.indexOf(e)>-1;a.updateFavoriteButton({favorite:s}),$(".chat-header__favorite").unbind().click(function(e){console.log("[chatManager.chat-header__favorite] (click) Got click on favorite button"),socketClient.toggleFavorite({chatId:i})}),$(".chat-topic").text(o),$(".chat-header__title").text(r),$(".chat-header__avatar").html(n)},ChatManager.destroyChat=function(e,a){var t=this;delete ChatManager.chats[e],t.focusLastChat(function(e){return e?console.log("[chatManager.destroyChat] Error focusing on last active chat"):void a(null)})},ChatManager.partChat=function(e,a){var t=this;ChatManager.chats[e].joined=!1,t.focusLastChat(function(e){a(e)})},ChatManager.focusLastChat=function(e){var a=Object.keys(ChatManager.chats).sort().filter(function(e){return ChatManager.chats[e].joined}),t=ChatManager.chats[a[a.length-1]];ChatManager.activeChat=t,ChatManager.focusChat({id:t.id},function(a){return a?e(a):void ChatManager.updateRoomList(function(a){e(null)})})},ChatManager.focusChat=function(e,a){var t=e.id,n=(ChatManager.chats[t].type,ChatManager.chats[t].name,$("#chat"));console.log("Setting activeChat to room: "+ChatManager.chats[t].name+" which has ID: "+t),ChatManager.setActiveChat(t),ChatManager.chats[t].unread&&(ChatManager.chats[t].unread=!1,ChatManager.chats[t].unreadCount=0),"room"==ChatManager.chats[t].type&&ChatManager.updateRoomUsers({chatId:t}),ChatManager.refreshChatContent(t),ChatManager.updateChatStatus(),n[0].scrollTop=n[0].scrollHeight,$(".chat-list-item-selected").addClass("chat-list-item").removeClass("chat-list-item-selected"),$("#"+t).removeClass("chat-list-item").addClass("chat-list-item-selected"),a(null)},ChatManager.setActiveChat=function(e){ChatManager.activeChat=e,window.activeChat=e},ChatManager.updateRoomList=function(e){console.log("[chatManager.updateRoomList] Chats: ",ChatManager.chats),$("#room-list").empty(),console.log("Updating room list!");var a=Object.keys(ChatManager.chats);a.forEach(function(e){if("room"==ChatManager.chats[e].type&&ChatManager.chats[e].joined){var a=ChatManager.chats[e].name,t=ChatManager.chats[e].unread;if(!$("#room-list #"+e).length){var n=[],o=[];ChatManager.activeChat==e?(console.log("Active chat is "+ChatManager.activeChat),n.push("chat-list-item-selected")):n.push("chat-list-item"),t||o.push("hidden");var r='<li class="room '+n.join()+'" id="'+e+'">'+a+'<i class="icon idea '+o.join()+'"></i></li>';$("#room-list").append(r),console.log("Added "+a+" to room-list")}$("#"+e).unbind().click(function(){ChatManager.focusChat({id:e},function(e){ChatManager.updateRoomList(function(){})})})}}),e(null)},ChatManager.updateChatList=function(){var e="",a=Object.keys(ChatManager.chats).filter(function(e){return console.log("Looping chat id: "+e+" and type is: "+ChatManager.chats[e].type),"chat"==ChatManager.chats[e].type});a.forEach(function(a){console.log("[chatManager.updateChatList] Adding chat with ID: "+a+" to the chat list");var t=ChatManager.chats[a],n=ChatManager.chats[a].unread,o=[],r=[];n||r.push("hidden"),ChatManager.activeChat==a?o.push("chat-list-item-selected"):o.push("chat-list-item"),e+='<li class="private-chat '+o.join()+'" id="'+a+'">'+t.name+'<i class="icon idea '+r.join()+'"></i></li>\n'}),$("#chat-list").html(e),a.forEach(function(e){console.log("[chatManager.updateChatList] Setting on click for chat with ID: "+e),e!==ChatManager.userNameMap[window.username]&&$("#"+e).unbind().click(function(){console.log("[chatManager.updateChatList] Got click on id: "+e),ChatManager.focusChat({id:e},function(e){ChatManager.updateChatList(function(){})})})})},ChatManager.updateRoomUsers=function(e){var a=e.chatId,t=e.socket,n=ChatManager.chats[a].members,o=ChatManager.chats[a].subscribers,r="";console.log("[CHAT MANAGER] (updateRoomUsers) members: "+JSON.stringify(n)),console.log("[CHAT MANAGER] (updateRoomUsers) chats: ",Object.keys(ChatManager.chats));var i=function(e){return ChatManager.chats[a].activeUsers.indexOf(e)>-1?(console.log("[chatManager.updateRoomUsers] Looping activeUsers for '"+e+"' and indexOf is true"),!0):(console.log("[chatManager.updateRoomUsers] Looping activeUsers for '"+e+"' and indexOf is false"),!1)};o.length>0&&o.forEach(function(e){var t=ChatManager.userlist[e].username;console.log("[chatManager.updateRoomUsers] activeUsers is: ",ChatManager.chats[a].activeUsers);var n=i(e),o=ChatManager.userlist[e];console.log("[CHAT MANAGER] (updateRoomUsers) looping user:",t),ChatManager.chats[e]||t==window.username||console.log("chat for ",t," was empty so initializing");var s="0";if(o&&o.emailHash)var s=o.emailHash;r+=n?"<li class='user-list-li user-active' userId='"+e+"' id='userlist-"+e+"' name='"+t+"' data-content='"+t+"'>\n":"<li class='user-list-li user-inactive' userId='"+e+"' id='userlist-"+e+"' name='"+t+"' data-content='"+t+"'>\n",r+='  <div class="user-list-avatar avatar-m avatar" style="background-image: url(\'https://www.gravatar.com/avatar/'+s+"?s=64')\" data-original-title=''>\n",r+="  </div>\n",r+="</li>\n"}),$("#user-list").html(r),o.length>0&&o.forEach(function(e){console.log("Setting up User Popup for '#userlist-"+e+" .user-list-avatar'"),$("#userlist-"+e+" .user-list-avatar").popup({inline:!0,position:"left center",hoverable:!0,target:"#userlist-"+e,popup:$(".ui.popup.userPopup"),on:"click"}),$("#userlist-"+e+" .user-list-avatar").click(function(){var e=$(this).parent().attr("userid");console.log("Populating user popup for",username),ChatManager.populateUserPopup({userId:e,socket:t})})})},ChatManager.populateUserPopup=function(e){var a=this,t=e.userId,n=ChatManager.userlist[t],o=n.username,r=n.fullName,i=n.emailHash,s=n.email,c=(e.socket,[t,ChatManager.userNameMap[window.username]]),l="<img src='https://www.gravatar.com/avatar/"+i+"?s=256' class='avatar-l'>";$(".userPopup .avatar").html(l),$(".userPopup .fullName").text(r),$(".userPopup .username").text(o),$(".userPopup .email").text(s),$(".userPopup .email").attr("href","mailto:"+s);var g="<a href='http://pipo.chat/users/"+o+"' target='_blank'>"+o+"</a>";$(".userPopup .username").html(g),$(".userPopup .privateChatButton").unbind().click(function(){o!==window.username&&(ChatManager.arrayHash(c,function(e){window.socketClient.socket.emit("getChat",{chatHash:e,participantIds:c}),window.socketClient.socket.on("chatUpdate-"+e,function(t){console.log("[chatManager.populateUserPopup] Got chatUpdate for chatHash '"+e+"', running handleChatUpdate"),a.setActiveChat(e),a.handleChatUpdate(t,function(){}),window.socketClient.socket.removeListener("chatUpdate-"+e)})}),$(".userPopup").removeClass("popover").addClass("popover-hidden"))})},ChatManager.setChatEnabled=function(e){if(!e)var e=Object.keys(ChatManager.chats);e.forEach(function(e){var a=ChatManager.chats[e].enabled;return a?void console.log("[setChatEnabled] Trying to enable chat when it is already enabled"):(ChatManager.chats[e].enabled=!0,void(ChatManager.activeChat==e&&ChatManager.enableChat()))})},ChatManager.setChatDisabled=function(e){if(!e)var e=Object.keys(ChatManager.chats);e.forEach(function(e){var a=ChatManager.chats[e].enabled;return a?(ChatManager.chats[e].enabled=!1,void(ChatManager.activeChat==e&&ChatManager.disableChat())):void console.log("[setChatDisabled] Trying to disable chat when it is already disabled")})},ChatManager.updateChatStatus=function(){if(ChatManager.activeChat){var e=ChatManager.activeChat;if(ChatManager.chats[e].enabled)return ChatManager.enableChat();if(!ChatManager.chats[e].enabled)return ChatManager.disableChat();console.log("[chatManager.updateChatStatus] ERROR: chat.enabled not set?")}else console.log("[ChatManager.updateChatStatus] Currently no active chat...")},ChatManager.enableChat=function(){var e=this;$(".ui.modal.generate").modal("hide"),$("#message-input").attr("placeHolder","Type your message here...").prop("disabled",!1),$("#send-button").prop("disabled",!1),$("#loading-icon").hide(),$("#input-container").find("textarea.message-input").keydown(function(a){var t=this;if(13===a.keyCode&&a.shiftKey){var n=t.value,o=e.getCaret(this);t.value=n.substring(0,o)+"\n"+n.substring(o,n.length),a.stopPropagation();var r=$("#message-input");return r[0].scrollTop=r[0].scrollHeight,!1}return 13===a.keyCode?($("#main-input-form").submit(),!1):void 0}),$("#send-button").unbind().on("click",function(){return console.log("Got send button click!"),ChatManager.sendMessage(function(){return fitToContent("message-input",156),!1}),!1})},ChatManager.disableChat=function(){$("textarea").off("keydown","**"),$("#message-input").attr("placeHolder","         Waiting for connection...").prop("disabled",!0),$("#send-button").prop("disabled",!0),$("#loading-icon").show()},ChatManager.getCaret=function(e){if(e.selectionStart)return e.selectionStart;if(document.selection){e.focus();var a=document.selection.createRange();if(null===a)return 0;var t=e.createTextRange(),n=t.duplicate();return t.moveToBookmark(a.getBookmark()),n.setEndPoint("EndToStart",t),n.text.length}return 0},ChatManager.prepareMessage=function(e,a){var t=window.marked(e).replace(/(<p>|<\/p>)/g,""),n=$("<div>").html(t);n.find("a").attr("target","_blank"),n.find("code").addClass("hljs"),a(null,n.html())},ChatManager.handleMessage=function(e){var a=e.fromUserId,t=ChatManager.userlist[a].username,n=e.messageString,o=e.chatId,r=($("#chat"),e.date||(new Date).toISOString()),i=".*@"+window.username+".*",s=new RegExp(i);console.log("Running mention regex: "+n.match(s)),n.match(s)&&clientNotification.send(null,"You were just mentioned by "+t+" in room #"+ChatManager.chats[o].name,n,3e3),this.addMessageToChat({type:"room",chatId:o,messageString:n,fromUserId:a,date:r})},ChatManager.handlePrivateMessage=function(e){var a,t=this,n=e.message,o=e.chatId,r=e.fromUserId,i=ChatManager.userlist[r].username,s=ChatManager.userNameMap[window.username],c=(e.toUserIds,e.date),l=[ChatManager.userlist[r].id,s],g=function(e,a,t){window.encryptionManager.decryptMessage({keyRing:ChatManager.chats[e].keyRing,encryptedMessage:a},function(e,a){e&&console.log(e),t(a)})};ChatManager.chats[o]&&g(o,n,function(e){clientNotification.send(null,"Private message from "+i,e,3e3),ChatManager.addMessageToChat({type:"chat",fromUserId:r,chatId:o,messageString:e,date:c})}),ChatManager.chats[o]||(a=i,ChatManager.chats[o]={id:o,type:"chat",name:a,messageCache:"",unread:!0,unreadCount:0,messages:[]},ChatManager.chats[o].unreadCount++,console.log("[chatManager.handlePrivateMessage] unreadCount: "+ChatManager.chats[o].unreadCount),console.log("Updating private chats"),ChatManager.updateChatList(),ChatManager.arrayHash(l,function(e){g(o,n,function(e){clientNotification.send(null,"Private message from "+i,e,3e3),ChatManager.addMessageToChat({type:"chat",fromUserId:r,chatId:o,messageString:e,date:c})}),window.socketClient.socket.emit("getChat",{chatHash:e,participantIds:l}),window.socketClient.socket.on("chatUpdate-"+e,function(a){t.handleChatUpdate(a,function(){}),window.socketClient.socket.removeListener("chatUpdate-"+e)})}))},ChatManager.handleLocalMessage=function(e){var a=e.chatId,t=ChatManager.chats[a].type,n=e.messageString,o=e.fromUserId,r=e.date;ChatManager.addMessageToChat({type:t,fromUserId:o,chatId:a,messageString:n,date:r})},ChatManager.addMessageToChat=function(e){var a=(e.type,e.messageString),t=e.date,n=e.fromUserId,o=ChatManager.userlist[n].username,r=e.chatId,i=$("#chat");t||(new Date).toISOString();ChatManager.formatChatMessage({messageString:a,fromUserId:n,fromUsername:o,date:t},function(e){ChatManager.chats[r].messageCache=ChatManager.chats[r].messageCache.concat(e)}),ChatManager.activeChat==r?(ChatManager.refreshChatContent(r),i[0].scrollTop=i[0].scrollHeight):(ChatManager.chats[r].unread=!0,ChatManager.chats[r].unreadCount++,console.log("[chatManager.handlePrivateMessage] unreadCount: "+ChatManager.chats[r].unreadCount),ChatManager.updateRoomList(function(){}),ChatManager.updateChatList(function(){}))},ChatManager.populateMessageCache=function(e){var a=ChatManager.chats[e].messages,t=a.length;ChatManager.chats[e].messageCache="",t>0&&a.forEach(function(a){var t=ChatManager.userlist[a.fromUser].username;ChatManager.formatChatMessage({messageString:a.decryptedMessage,fromUserId:a.fromUser,fromUsername:t},function(a){ChatManager.chats[e].messageCache=ChatManager.chats[e].messageCache.concat(a)})})},ChatManager.formatChatMessage=function(e,a){var t=e.messageString,n=e.fromUserId,o=e.fromUsername,r=e.date,i=ChatManager.userlist[n].emailHash||"00000000000",s=r||(new Date).toISOString(),c='<div class="chat-item"><div class="chat-item__container"> <div class="chat-item__aside"> <div class="chat-item__avatar"> <span class="widget"><div class="trpDisplayPicture avatar-s avatar" style="background-image: url(\'https://www.gravatar.com/avatar/'+i+'?s=64\')" data-original-title=""> </div> </span> </div> </div> <div class="chat-item__actions js-chat-item-actions"> <i class="chat-item__icon chat-item__icon--read icon-check js-chat-item-readby"></i> <i class="chat-item__icon icon-ellipsis"></i> </div> <div class="chat-item__content"> <div class="chat-item__details"> <div class="chat-item__from js-chat-item-from">'+o+'</div> <div class="chat-item__time js-chat-item-time chat-item__time--permalinkable"> <span style="float:right;" title="'+s+'" data-livestamp="'+s+'"></span> </div> </div> <div class="chat-item__text js-chat-item-text">'+t+"</div> </div> </div></div>";
return a(c)},ChatManager.refreshChatContent=function(e){var a=ChatManager.chats[e].messageCache;console.log("Refreshing chat content for ",ChatManager.chats[e].name),$("#chat").html(a),ChatManager.updateChatHeader(e)},ChatManager.handleChatUpdate=function(e,a){var t=e.chat,n=this;console.log("[handleChatUpdate] got 'chatUpdate' from server"),ChatManager.initChat(t,function(){return n.updateChatList(),n.updateRoomList(function(){}),t.participants&&ChatManager.activeChat==t.id&&(console.log("[chatManager.handleChatUpdate] Focusing chat with id '"+t.id+"'"),n.focusChat({id:t.id},function(e){console.log("Room focus for "+t.id+" done")})),console.log("[handleChatUpdate] initChat done."),a()})},ChatManager.sendMessage=function(e){var a=$("#message-input").val();console.log("1 sendMessage input: "+a);var t=/^\/(.*)$/,n=a.match(t);return""===a?e():void(null!==n?ServerCommand.parse(n,function(){return e()}):ChatManager.prepareMessage(a,function(a,t){var n=ChatManager.activeChat,o=ChatManager.chats[n].type,r=ChatManager.chats[n].name;console.log("Active chat type is: "+o);var i=(new Date).toISOString();if("room"==o)return console.log("Sending message to room #"+r),window.socketClient.sendMessage({chatId:n,message:t}),$("#message-input").val(""),e();if("chat"==o){var s=ChatManager.chats[n].participants;return console.log("[chatManager.sendMessage] Sending private message for chatId '"+n+"'"),socketClient.sendPrivateMessage({chatId:n,toUserIds:s,message:t}),$("#message-input").val(""),ChatManager.handleLocalMessage({chatId:n,messageString:t,fromUserId:ChatManager.userNameMap[window.username],date:i}),e()}return console.log("ERROR: No activeChatType!")}))},ChatManager.showHelp=function(){var e=ChatManager.activeChat,a=ChatManager.chats[e].type,t=["** ROOM Commands **","/room [room] member add [member]"];t.forEach(function(t){ChatManager.addMessageToChat({type:a,messageString:t,chat:e})})},ChatManager.membershipUpdateError=function(e){var a=$(".manage-members-modal #manageMembersError"),t=$(".manage-members-modal #manageMembersMessage");return console.log("[MEMBERSHIP UPDATE ERROR] Displaying error message"),-1!==a.text().toLowerCase().indexOf(e)?!1:(a.transition("is visible")?(t.transition({animation:"fade up",duration:"0.5s"}),a.transition({animation:"fade up",duration:"0.5s",onComplete:function(){a.text(e)}}),a.transition({animation:"fade up",duration:"1s"})):(a.text(e),a.transition({animation:"fade up",duration:"1s"})),!1)},ChatManager.membershipUpdateMessage=function(e){var a=$(".manage-members-modal #manageMembersMessage"),t=$(".manage-members-modal #manageMembersError");return-1!==a.text().toLowerCase().indexOf(e)?!1:(a.transition("is visible")?(a.transition({animation:"fade up",duration:"0.5s",onComplete:function(){a.text(e)}}),t.transition({animation:"fade up",duration:"0.5s"}),a.transition({animation:"fade up",duration:"1s"})):(a.text(e),a.transition({animation:"fade up",duration:"1s"})),!1)},ChatManager.initialPromptForCredentials=function(){console.log("Prompting for credentials!"),$(".ui.modal.initial").modal("setting","closable",!1).modal("show"),$(".ui.button.register").unbind().click(function(e){RegisterUserPrompt.show(function(e){})})},ChatManager.promptForCredentials=function(e){console.log("Prompting for credentials!"),RegisterUserPrompt.show(function(a){return e()})},ChatManager.promptForImportKeyPair=function(e){console.log("Prompting user to import existing keypair"),$(".modal.import-keypair-modal").modal("show"),$(".import-keypair-modal #select-publickey").click(function(e){e.preventDefault(),$("#publickey-file-input").trigger("click")}),$(".import-keypair-modal #select-privatekey").click(function(e){e.preventDefault(),$("#privatekey-file-input").trigger("click")}),$(".import-keypair-submit-button").click(function(a){var t=document.getElementById("publickey-file-input").files[0],n=null,o=document.getElementById("privatekey-file-input").files[0],r=null,i=document.getElementById("username-input").value;if(t&&o){var s=/\r?\n|\r/g,c=new FileReader;c.readAsText(t),c.onload=function(a){n=a.target.result,console.log("TEST: "+n.toString().replace(s,"\n")),c.readAsText(o),c.onload=function(a){r=a.target.result.toString().replace(s,"\n");var t={publicKey:n,privateKey:r,username:i};e(null,t)}}}else err="Error importing key pair from file",e(err,null)})};var clientNotification={};clientNotification.init=function(){this.getPermission(function(e){e&&console.log("Have notification permissions!")})},clientNotification.getPermission=function(e){if(!window.Notification)return e(!1);if(console.log(Notification.permission),"default"===Notification.permission)Notification.requestPermission(function(){return e(!0)});else{if("granted"===Notification.permission)return e(!0);if("denied"===Notification.permission)return e(!1)}},clientNotification.send=function(e,a,t,n,o){var r=this;this.getPermission(function(e){if(e){console.log("[NOTIFICATION] Attempting to display notification"),n="undefined"!=typeof n?n:0,o="undefined"!=typeof o?o:!1;var i=null!==document.querySelector(":focus"),s=!i||i&&o;if(console.log("[NOTIFICATION] shouldNotify is "+s),s){console.log("[NOTIFCATION] Sending notification now...");var c=new Notification(a,{body:t});console.log("[clientNotification.send] Flashing title bar!"),r.flashTitleBar("New Messages")(),n>0&&setTimeout(function(){c.close()},n)}}else console.log("Don't have permission to display notification")})},clientNotification.pulseChat=function(e){var a={backgroundColor:"#ddd"},t=$("#"+e);t.pulse(a,{duration:3250,pulses:5,interval:800})},clientNotification.flashTitleBar=function(e){var a,t=document.title,n=function(){document.title=document.title==e?" ":e},o=function(){clearInterval(a),document.title=t,window.onmousemove=null,a=null};return function(){a||(a=setInterval(n,1e3),window.onmousemove=o)}},EncryptionManager.prototype.generateClientKeyPair=function(e,a,t,n){var o=this,r={numBits:e,userId:a,passphrase:t};console.log("Generating client keypair, please wait..."),window.openpgp.generateKeyPair(r).then(function(e){return o.keyPair={privateKey:e.privateKeyArmored,publicKey:e.publicKeyArmored},n(null,o.keyPair)})["catch"](function(e){return n(e,null)})},EncryptionManager.prototype.unloadClientKeyPair=function(e){return self.clientCredentialsLoaded=!1,self.keyRing=new window.kbpgp.keyring.keyRing,e()},EncryptionManager.prototype.loadClientKeyPair=function(a){var t=this;if(t.clientCredentialsLoaded)return console.log("Client credentials already loaded..."),a(null,!0);console.log("[LOAD CLIENT KEY PAIR] Loading client key pair from local storage");var n=localStorage.getItem("keyPair"),o=localStorage.getItem("username");if(!n||!o)return console.log("[ENCRYPTION MANAGER] (loadClientKeyPair) No keyPairData found in local storage..."),a(null,!1);console.log("[LOAD CLIENT KEY PAIR] Loaded client key pair from local storage!");try{n=JSON.parse(n)}catch(r){return console.log("Error parsing keyPair data from localStorage",e),a(r,!1)}kbpgp.KeyManager.import_from_armored_pgp({armored:n.publicKey},function(e,o){return e?(console.log("Error loading key",e),a(e)):void o.merge_pgp_private({armored:n.privateKey},function(e){e||(t.keyManager=o,o.is_pgp_locked()&&UnlockClientKeyPairModal.show(function(){return t.keyRing.add_key_manager(o),t.clientCredentialsLoaded=!0,a(null,!0)}))})})},EncryptionManager.prototype.loadMasterKeyPair=function(e,a,t){var n=this;if(a){if(console.log("[ENCRYPTION MANAGER] masterKeyPair found! client keyManager locked",n.keyManager.is_pgp_locked().toString()),n.keyManager.is_pgp_locked())return console.log("[ENCRYPTION MANAGER] (loadMasterKeyPair) Client keyManager is locked! :(");if(!a.encryptedPrivateKey)return console.log("[ENCRYPTION MANAGER] (loadMasterKeyPair) No master key provided to loadMasterKeyPair! encryptedMasterPrivateKey is NULL");console.log("[ENCRYPTION MANAGER] (loadMasterKeyPair) Decrypting master key"),n.decryptMasterKey(a.encryptedPrivateKey,function(o,r){window.encryptionManager.getKeyManager({publicKey:a.publicKey,privateKey:r,passphrase:""},function(a,o){n.masterKeyManager=o,window.encryptionManager.unlockMasterKey(e,function(e){return e?t(e,!1):(n.masterCredentialsLoaded=!0,console.log("[ENCRYPTION MANAGER] (loadMasterKeyPair) Unlock master key pair complete!"),t(e,!0))})})})}else console.log("[ENCRYPTION MANAGER] (loadMasterKeyPair) CLIENT KEY MODE!")},EncryptionManager.prototype.getKeyManager=function(e,a){var t=e.privateKey,n=e.publicKey,o=e.passphrase;console.log("[ENCRYPTION MANAGER] (getKeyManager) Starting KeyManager creation with privateKey: "+t+" publicKey: "+n+" passphrase: "+o),console.log("[ENCRYPTION MANAGER] (getKeyManager) Starting KeyManager creation"),kbpgp.KeyManager.import_from_armored_pgp({armored:n},function(e,n){return e?a(e,null):void n.merge_pgp_private({armored:t},function(e){return e?a(e,null):n.is_pgp_locked()?void n.unlock_pgp({passphrase:o},function(e){return e?a(e):void n.sign({},function(e){return e?a(e):(console.log("Loaded private key with passphrase"),a(e,n))})}):(console.log("Loaded private key w/o passphrase"),a(e,n))})})},EncryptionManager.prototype.promptForPassphrase=function(e){UnlockClientKeyPairModal.show(e)},EncryptionManager.prototype.clientKeyUnlocked=function(){},EncryptionManager.prototype.unlockClientKey=function(e,a){var t=this,n=e.passphrase;console.log("[encryptionManager.unlockClientKey] Unlocking client key"),t.keyManager.unlock_pgp({passphrase:n},function(e){return e?(console.log("Error unlocking key",e),a({err:e})):(console.log("[ENCRYPTION MANAGER] (unlockClientKey) Successfully decrypted client key"),t.keyRing.add_key_manager(t.keyManager),t.clientCredentialsDecrypted=!0,a(null))})},EncryptionManager.prototype.unlockMasterKey=function(e,a){function t(){n.masterKeyManager.unlock_pgp({passphrase:"pipo"},function(e){return e?(console.log("Error unlocking key",e),a(e)):(n.keyRing.add_key_manager(n.masterKeyManager),n.masterCredentialsDecrypted=!0,a(null))})}var n=this;if(console.log("(unlockMasterKey) self.masterKeyManager.is_gpg_locked(): "+n.masterKeyManager.is_pgp_locked()),"masterKey"!=n.encryptionScheme[e]||!n.masterKeyManager.is_pgp_locked())return n.keyRing.add_key_manager(n.masterKeyManager),console.log("[UNLOCK MASTER KEY] Added passwordless masterKey to keyring"),a(null);t()},EncryptionManager.prototype.buildChatKeyRing=function(e,a){var t=e.chatId,n=ChatManager.chats[t].membershipRequired,o=new window.kbpgp.keyring.KeyRing;return console.log("[encryptionManager.buildChatKeyRing] Building chat keyring for #"+ChatManager.chats[t].name),n&&ChatManager.chats[t].members.forEach(function(e){if(ChatManager.userlist[e].username!=window.username){var a=ChatManager.userlist[e].keyInstance;o.add_key_manager(a)}}),n||(console.log("[encryptionManager.buildChatKeyRing] Building keyRing for public chat"),Object.keys(ChatManager.userlist).forEach(function(e){if(ChatManager.userlist[e].username!=window.username){var a=ChatManager.userlist[e].keyInstance,t=ChatManager.userlist[e].keyInstance.get_pgp_fingerprint_str();console.log("[encryptionManager.buildChatKeyRing] Adding user '"+ChatManager.userlist[e].username+"' key with finger print '"+t+"'"),o.add_key_manager(a)}})),a(o)},EncryptionManager.prototype.encryptRoomMessage=function(e,a){var t=e.chatId,n=e.message,o=this;"masterKey"==ChatManager.chats[t].encryptionScheme?(console.log("[ENCRYPT ROOM MESSAGE] Using masterKey scheme"),o.encryptMasterKeyMessage({chatId:t,message:n},function(e,t){a(e,t)})):"clientKey"==ChatManager.chats[t].encryptionScheme?(console.log("[ENCRYPT ROOM MESSAGE] Using clientKey scheme"),console.log("[DEBUG] Encrypting message: "+n+" for room: "+t),o.encryptClientKeyMessage({chatId:t,message:n},function(e,t){a(e,t)})):(console.log("[ENCRYPT ROOM MESSAGE] Using default scheme"),o.encryptClientKeyMessage({chatId:t,message:n},function(e,t){a(e,t)}))},EncryptionManager.prototype.encryptMasterKeyMessage=function(e,a,t){var n=this;window.kbpgp.box({msg:a,encrypt_for:n.masterKeyManager,sign_with:n.keyManager},t)},EncryptionManager.prototype.encryptClientKeyMessage=function(e,a){var t=this,n=e.chatId,o=e.message,r=[],i={};Object.keys(ChatManager.chats[n].keyRing._kms).forEach(function(e){r.push(ChatManager.chats[n].keyRing._kms[e])}),ChatManager.chats[n].subscribers.forEach(function(e){i[ChatManager.userlist[e].username]=ChatManager.userlist[e].keyInstance.get_pgp_fingerprint_str()}),console.log("[encryptionManager.encryptClientKeyMessage] Encrypting client key message to users: ",i),r.push(t.keyManager),window.kbpgp.box({msg:o,encrypt_for:r,sign_with:t.keyManager},a)},EncryptionManager.prototype.encryptPrivateMessage=function(e,a){var t=this,n=e.chatId,o=e.message,r=[],i={};Object.keys(ChatManager.chats[n].keyRing._kms).forEach(function(e){r.push(ChatManager.chats[n].keyRing._kms[e])}),ChatManager.chats[n].participants.forEach(function(e){i[ChatManager.userlist[e].username]=ChatManager.userlist[e].keyInstance.get_pgp_fingerprint_str()}),r.push(t.keyManager),window.kbpgp.box({msg:o,encrypt_for:r,sign_with:t.keyManager},a)},EncryptionManager.prototype.decryptMessage=function(e,a){var t=this,n=e.encryptedMessage,o=e.keyRing||this.keyRing;Object.keys(o._keys).forEach(function(e){console.log("[ENCRYPTION MANAGER] (decryptMessage) Decrypting clientKey message with key ID '"+o._keys[e].km.get_pgp_fingerprint().toString("hex")+"'")}),t.keyManager&&o.add_key_manager(t.keyManager),window.kbpgp.unbox({keyfetch:o,armored:n},function(e,t){return a(e,t)})},EncryptionManager.prototype.decryptMasterKeyMessage=function(e,a){},EncryptionManager.prototype.removeClientKeyPair=function(e,a){function t(e){switch(e.name){case"BAD":return console.log("Bad"),a(e.message);default:return message="Unknown Error: "+e.name,a(e.message)}console.log("Error: "+message)}e.root.getFile("clientkey.aes",{create:!1},function(n){n.remove(function(){console.log("File successufully removed."),e.root.getFile("clientkey.pub",{create:!1},function(e){e.remove(function(){console.log("File successufully removed."),a(null)},t)},t)},t)},t)},EncryptionManager.prototype.saveClientKeyPair=function(e,a){var t=e.keyPair,n=e.username;console.log("Saving client keyPair with username: "+n),window.username=n,localStorage.setItem("username",n),localStorage.setItem("keyPair",JSON.stringify(t)),a(null)},EncryptionManager.prototype.initStorage=function(e){function a(a){function t(a){console.log("Got error during init storage: "+a),e(a)}console.log("[INIT STORAGE] Initializing storage..."),a=a,navigator.webkitPersistentStorage.queryUsageAndQuota(function(n,o){var r=o-n;if(console.log("availableSpace: "+r),r>=amountOfSpaceNeeded)return console.log("Have as much space as we need!"),e(null,a);var i=amountOfSpaceNeeded+n;navigator.webkitPersistentStorage.requestQuota(i,function(t){return console.log("Didn't have enough space so requested more. Got: "+t),e(null,a)},t)},t)}window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.PERSISTENT,1048576,a,function(e){console.log("Error initStorage: "+e)})},EncryptionManager.prototype.decryptMasterKey=function(e,a){var t=this;e||console.log("[ENCRYPTION MANAGER] (decryptMasterKey) encryptedMasterPrivateKey is NULL!"),t.keyRing||console.log("[ENCRYPTION MANAGER] (decryptMasterKey) self.keyRing is NULL!"),console.log("[ENCRYPTION MANAGER] (decryptMasterKey) Start..."),kbpgp.unbox({keyfetch:t.keyRing,armored:e},function(e,t){if(null!=e)return console.log("Problem: "+e);var n=null;console.log("[ENCRYPTION MANAGER] (decryptMasterKey) Decrypted master key"),n=t[0].toString();var o=km=null;return o=t[0].get_data_signer(),o&&(km=o.get_key_manager()),km?(console.log("[ENCRYPTION MANAGER] (decryptMasterKey) Signed by PGP fingerprint"),console.log(km.get_pgp_fingerprint().toString("hex")),a(e,n)):(console.log("[ENCRYPTION MANAGER] (decryptMasterKey) Unsigned key"),a(e,n))})},EncryptionManager.prototype.getKeyInstance=function(e,a){window.kbpgp.KeyManager.import_from_armored_pgp({armored:e},function(e,t){return e?console.log("[encryptionManager.getKeyInstance] Error getting key Instance"):a(t)})},EncryptionManager.prototype.getMasterKeyPair=function(e,a){var t=(new Date).toString();console.log("["+t+"] Getting master keyPair for "+e),$.ajax({type:"GET",url:"/key/masterKeyPair",dataType:"json",data:{username:e},statusCode:{404:function(e){return console.log("["+t+"] [MASTER KEY PAIR] (404) Error getting master keypair: "+e),a(e,null)},200:function(e){return console.log("["+t+"] [MASTER KEY PAIR] (200) Encrypted masterKeyPair retrieved and cached"),kbpgp.KeyManager.import_from_armored_pgp({armored:e.publicKey},function(a,t){a||t.merge_pgp_private({armored:e.privateKey},function(a){a||(t.is_pgp_locked()?t.unlock_pgp({passphrase:""},function(e){e||console.log("Loaded private key with passphrase")}):console.log("Loaded private key w/o passphrase")),console.log("Loaded private key with passphrase"),localStorage.setItem("masterKeyPair",JSON.stringify(e)),self.masterKeyManager=t})}),a(null,e)}}})},EncryptionManager.prototype.verifyRemotePublicKey=function(e,a,t){console.log("Verifying remote public key for user '"+e+"'"),$.ajax({type:"GET",url:"/key/publickey",dataType:"json",data:{username:e},statusCode:{404:function(e){return console.log("No key found on remote"),t(null,!1)},200:function(e){e.publicKey;console.log("Key exists on remote");var n=/\r?\n|\r/g,o=a.toString().replace(n,""),r=e.publicKey.toString().replace(n,"");return o==r?(console.log("Key on remote matches local"),t(null,!0)):(console.log("parsedPublicKey: "+o),console.log("parsedRemotePublicKey: "+r),console.log("Key on remote does not match"),t(null,!1))}}})},EncryptionManager.prototype.updatePublicKeyOnRemote=function(e,a,t){console.log("Updating public key on remote"),$.ajax({type:"POST",url:"/key/publickey",dataType:"json",data:{username:e,publicKey:a},success:function(e,a,t){},statusCode:{404:function(){return console.log("Got 404 when updating public key on remote"),t("Error updating public key on remote")},200:function(e,a,n){return console.log("Updated remote publicKey successfully"),t(null)}}})},EncryptionManager.prototype.verifyCertificate=function(e,a){var t=this,n=atob(e.payload),o=localStorage.getItem("serverPayloadHash");t.sha256(n).then(function(r){if(o&&r!==o)return alert("For security reasons we have prevented the application from attempting to authenticate as the Admin Certificate has changed!\n\nThe Admin Certificate hash does not match our previously recorded hash.\n\nIf this change was expected you may reset the hash, if not please contact the administrator of this server");if(o)return console.log("Admin certificate hash matches previously stored hash, skip full verification"),a();var i=e.signatures.map(function(e){return atob(e.data)}),s=JSON.parse(n),c=s.map(function(e){return e.fingerprint});t.loadAdminKeys(e,function(e){console.log("[encryptionManager.verifyCertificate] Loaded admin keys"),window.async.eachSeries(i,function(e,a){var o,r;t.decryptMessage({encryptedMessage:e},function(e,t){if(console.log("[encryptionManager.verifyCertificate] Decrypted Admin Certificate..."),e)return console.log(e),a(e);if(o=t[0].get_data_signer().get_key_manager().get_pgp_fingerprint_str(),r=c.indexOf(o),-1===r)return a("Admin certificate is not valid \nUnknown admin certificate signer with fingerprint: "+o);var i=/\r?\n|\r/g,s=t[0].toString().replace(i,""),l=n.toString().replace(i,"");return s!==l?a("Admin certificate not valid: \nAdmin signature does not match payload "+o):(c.splice(r,1),void a())})},function(e){return e?alert(e+"\n\nFor security reasons we have prevented the application from attempting to authenticate.\n\nIf you are the administrator for this server please verify your configuration files are correctly setup.\n\nIf you are an end user, please contact the administrator via secure means to determine if the server has been compromised."):(o||localStorage.setItem("serverPayloadHash",r.toString()),console.log("Admin certificate appears to be valid"),void a())})})})},EncryptionManager.prototype.loadAdminKeys=function(e,a){var t,n=this,o=localStorage.getItem("adminKeys");try{t=JSON.parse(o)}catch(r){console.log(r)}return t||(t=e.keys),t?void window.async.each(t,function(e,a){var t=atob(e.data);window.kbpgp.KeyManager.import_from_armored_pgp({armored:t},function(e,t){n.keyRing.add_key_manager(t),a()})},a):console.error("No known admin keys!",t)},EncryptionManager.prototype.hex=function(e){for(var a=[],t=new DataView(e),n=0;n<t.byteLength;n+=4){var o=t.getUint32(n),r=o.toString(16),i="00000000",s=(i+r).slice(-i.length);a.push(s)}return a.join("")},EncryptionManager.prototype.sha256=function(e){var a=this,t=new TextEncoder("utf-8").encode(e);return window.crypto.subtle.digest("SHA-256",t).then(function(e){return a.hex(e)})},window.encryptionManager=new EncryptionManager;var ServerCommand={};ServerCommand.parse=function(e,a){var t=e.regexResult,n=t[1],o=n.split(" "),r=ChatManager.activeChat.id;if(console.log("Split command is: "+o.toString()),"join"==o[0]){var i=o[1];socketClient.joinRoom(i,function(e){console.log("Sent request to join room "+i)})}else if("part"==o[0]){var s=o[1];socketClient.partRoom({chatId:r},function(e){console.log("Sent request to part room "+s)})}else if("help"==o[0]){var n=o[1];ChatManager.showHelp()}else{var c=null;c=ChatManager.chats[ChatManager.activeChat.id].name,socketClient.sendServerCommand({command:t[1],currentChat:ChatManager.activeChat.id}),console.log("Sending command '"+t[1]+"' to server")}return $("#message-input").val(""),a()},SocketClient.prototype.addListeners=function(){var e=this;e.listeners=!0,this.socket.on("authenticated",function(e){console.log("[SOCKET] authenticated"),e.socket=this,Authentication.authenticated(e)}),this.socket.on("roomUpdate",function(a){console.log("[SOCKET] roomUpdate"),e.handleRoomUpdate(a)}),this.socket.on("joinComplete",function(a){console.log("[SOCKET] joinComplete"),e.joinComplete(a)}),this.socket.on("partComplete",function(a){console.log("[SOCKET] partComplete"),e.partComplete(a)}),this.socket.on("createRoomComplete",function(a){console.log("[SOCKET] createRoomComplete"),e.createRoomComplete(a)}),this.socket.on("updateRoomComplete",function(a){e.updateRoomComplete(a)}),this.socket.on("chatUpdate",function(e){ChatManager.handleChatUpdate(e)}),this.socket.on("serverCommandComplete",function(a){console.log("[SOCKET] serverCommandComplete"),e.serverCommandComplete(a)}),this.socket.on("errorMessage",function(e){console.log("errorMessage",e)}),this.socket.on("user connect",function(e){}),this.socket.on("membershipUpdateComplete",function(a){e.handleMembershipUpdateComplete(a)}),this.socket.on("roomMessage",function(e){var a=e.message,t=e.chatId;window.encryptionManager.decryptMessage({keyRing:ChatManager.chats[t].keyRing,encryptedMessage:e.message},function(n,o){n&&console.log(n),ChatManager.handleMessage({messageString:o.toString(),date:a.date,fromUserId:e.fromUserId,chatId:t})})}),this.socket.on("privateMessage",function(e){var a=this;e.message,e.chatId;console.log("[socketClient] (privateMessage) Got private message event. Data is: ",e),e.socket=a,ChatManager.handlePrivateMessage(e)}),this.socket.on("newMasterKey",function(a){console.log("[SOCKET] 'new master key'");var t=a.room;ChatManager.disableChat(),e.joinRoom(t,function(e){ChatManager.localMsg({type:null,message:"Master key being updated. Please wait..."})})}),this.socket.on("userlistUpdate",function(e){var a=e.userlist,t=e.userNameMap;console.log("[SOCKET] 'userlistUpdate'"),ChatManager.userNameMap=t,ChatManager.updateUserlist(a)}),this.socket.on("activeUsersUpdate",function(a){var t=a.chatId;if(ChatManager.chats[t]){var n=ChatManager.chats[t].name,o=a.activeUsers;a.activeUsers;console.log("[SOCKET] 'roomUsersUpdate' for room #"+n),ChatManager.chats[t]&&(ChatManager.chats[t].activeUsers=o),console.log("[USERLIST UPDATE] Updating userlist"),ChatManager.activeChat==t&&ChatManager.updateRoomUsers({chatId:t,socket:e.socket})}}),this.socket.on("chatStatus",function(e){console.log("Got chat status...");var a=e.statusType,t=e.statusMessage;ChatManager.localMsg({type:a,message:t});var n=$("#messages");n[0].scrollTop=n[0].scrollHeight})},SocketClient.prototype.init=function(){var e=this;console.log("[INIT] Loading client keypair..."),window.encryptionManager.loadClientKeyPair(function(a,t){return a?console.log("[INIT] Error loading client key pair: "+a):t?(ChatManager.init(),console.log("[INIT] Client credentials loaded"),e.listeners||e.addListeners(),console.log("[INIT] Authenticating"),Authentication.authenticate({socket:e.socket})):(console.log("[INIT] Prompting for credentials"),ChatManager.initialPromptForCredentials())})},SocketClient.prototype.joinRoom=function(e,a){var t=this;return e&&"undefined"!=typeof e?(console.log("[JOIN ROOM] Joining room #"+e+" as "+window.username),t.socket.emit("join",{roomId:e}),a(null)):console.log("[JOIN ROOM] roomId was null  !")},SocketClient.prototype.createRoom=function(e,a){var t=this;console.log("[CREATE ROOM] Creating room");var e={name:e.name,topic:e.topic,encryptionScheme:e.encryptionScheme,keepHistory:e.keepHistory,membershipRequired:e.membershipRequired};t.socket.emit("createRoom",e),a(null)},SocketClient.prototype.updateRoom=function(e,a){var t=this;console.log("[UPDATE ROOM] Updating room");var e={id:e.id,name:e.name,topic:e.topic,encryptionScheme:e.encryptionScheme,keepHistory:e.keepHistory,membershipRequired:e.membershipRequired};console.log("[UPDATE ROOM] Updating with data:",e),t.socket.emit("updateRoom",e),a(null)},SocketClient.prototype.partRoom=function(e,a){var t=this,n=e.chatId;console.log("[PART ROOM] Parting room #"+ChatManager.chats[n].name),t.socket.emit("part",{chatId:n}),a(null)},SocketClient.prototype.sendMessage=function(e){var a=this,t=e.chatId,n=e.message;console.log("Encrypting message: "+n),window.encryptionManager.encryptRoomMessage({chatId:t,message:n},function(e,n){e?console.log("Error Encrypting Message: "+e):(console.log("[socketClient.sendMessage] Sending encrypted message to chat ID: ",t),a.socket.emit("roomMessage",{chatId:t,pgpMessage:n}),$("#message-input").val(""))})},SocketClient.prototype.joinComplete=function(e){var a=e.err,t=e.room;if(a)return console.log("Cannot join channel due to permissions"),ChatManager.showError(a);if(!ChatManager.activeChat&&window.activeChat&&ChatManager.chats[window.activeChat]&&(ChatManager.activeChat=window.activeChat),ChatManager.activeChat||ChatManager.setActiveChat(t.id),console.log("[SOCKET] (joinComplete) room: "+t.name+" data.encryptionScheme: "+e.encryptionScheme),window.encryptionManager.encryptionScheme[t.name]=e.encryptionScheme,console.log("[SOCKET] (joinComplete) encryptionScheme: "+e.encryptionScheme),"masterKey"==e.encryptionScheme){var n=e.masterKeyPair;console.log("[SOCKET] (joinComplete) Loading master key pair..."),window.encryptionManager.loadMasterKeyPair(t.name,n,function(e,a){return e?console.log("[INIT] ERROR loading master key pair"):a?void console.log("[INIT] Done decrypting master and client credentials - ENABLEING CHAT"):console.log("[JOIN COMPLETE] masterKeyPair not loaded...")})}else console.log("[INIT] Enabling chat in clientKey mode");ChatManager.initRoom(t,function(e){ChatManager.chats[t.id].joined=!0,ChatManager.updateRoomList(function(){ChatManager.activeChat==t.id&&ChatManager.focusChat({id:t.id},function(e){console.log("[chatManager.initRoom] Room focus for "+t.name+" done")}),ChatManager.enableChat(t.id)})})},SocketClient.prototype.partComplete=function(e){var a=e.chatId;ChatManager.partChat(a,function(){console.log("Done parting room")})},SocketClient.prototype.createRoomComplete=function(e){var a=this,t=e.room;a.joinRoom(t.id,function(e){return e?console.log("Error joining room after creating: "+e):void console.log("Joined room...")})},SocketClient.prototype.updateRoomComplete=function(e){e.name;console.log("[UPDATE ROOM COMPLETE] Done updating room...")},SocketClient.prototype.toggleFavorite=function(e){var a=this,t=e.chatId;console.log("[socketClient.toggleFavorite] Emitting toggle favorite for '"+t+"'"),a.socket.emit("toggleFavorite",{chatId:t}),a.socket.on("toggleFavoriteComplete-"+t,function(e){console.log("[socketClient.toggleFavorite] Got toggleFavoriteComplete for '"+t+"'"),a.socket.removeListener("toggleFavoriteComplete-"+t),ChatManager.updateFavoriteButton({favorite:e.favorite})})},SocketClient.prototype.handleRoomUpdate=function(e){var a=e.rooms;return e.err?console.log("[socketClient.handleRoomUpdate] Room update failed: ",e.err):void Object.keys(a).forEach(function(e){console.log("[socketClient.handleRoomUpdate] Adding room",e,"to array with data:",a[e]),ChatManager.initRoom(a[e],function(t){console.log("Init'd room "+a[e].name+" from room update"),ChatManager.updateRoomList(function(){ChatManager.enableChat(e)}),ChatManager.buildRoomListModal,ChatManager.populateManageMembersModal({clearMessages:!1})})})},SocketClient.prototype.handleMembershipUpdateComplete=function(e){var a=e.success,t=e.message;return a?(console.log("[HANDLE MEMBERSHIP UPDATE COMPLETE] Member added! Displaying message in modal. Message:",t),console.log("[socketClient.handleMembershipUpdateComplete] Running populateManageMembersModal"),ChatManager.populateManageMembersModal({clearMessages:!1}),void ChatManager.membershipUpdateMessage(t)):(ChatManager.membershipUpdateError(e.message),console.log("[HANDLE MEMBERSHIP UPDATE COMPLETE] Failed to add member: ",t))},SocketClient.prototype.sendServerCommand=function(e){var a=this,t=e.command,n=e.currentChat;a.socket.emit("serverCommand",{command:t,currentChat:n})},SocketClient.prototype.serverCommandComplete=function(e){var a=e.response;ChatManager.activeChat;console.log("Displaying response from server command in chat '"+ChatManager.chats[activeChatId].name+"'"),ChatManager.addMessageToChat({type:ChatManager.chats[activeChatId].type,message:a,chat:ChatManager.chats[activeChatId].name})},SocketClient.prototype.membership=function(e){var a=this;console.log("[MEMBERSHIP] Emitting membership"),a.socket.emit("membership",e)},SocketClient.prototype.sendPrivateMessage=function(e){var a=this,t=e.chatId,n=e.toUserIds,o=e.message;ChatManager.prepareMessage(o,function(e,o){window.encryptionManager.encryptPrivateMessage({chatId:t,message:o},function(e,o){e?console.log("Error Encrypting Message: "+e):(a.socket.emit("privateMessage",{chatId:t,toUserIds:n,pgpMessage:o}),$("#message-input").val(""))})})},SocketClient.prototype.updateMasterKey=function(e){window.encryptionManager.getMasterKeyPair(username,function(a,t){return a?(console.log("Error getting master key pair: "+a),ChatManager.localMsg({type:"ERROR",message:"Error getting master key pair"}),e("Error getting master key pair")):(pleaseWait(),ChatManager.localMsg({type:null,message:"Updated master key pair"}),console.log("Got master keypair, ready to encrypt/decrypt"),t.publicKey=encMasterKeyPair.publicKey,t.privateKey=encMasterKeyPair.privateKey,console.log("Ensuring that client keypair exists"),"undefined"==typeof keyPair.privateKey||null===keyPair.privateKey?(console.log("Private key does not yet exist so cannot decrypt master key"),e("Private key does not exist")):(console.log("[new master key] Client KeyPair exists. Trying to decrypt master key for '"+username+"'..."),console.log("encryptedMasterKeyPair.privateKey: "+t.privateKey),console.log("encryptedMasterKeyPair.publicKey: "+t.publicKey),decryptMasterKey(username,keyPair.privateKey,t.privateKey,function(a,t){return console.log("(new master key) Caching master private key decrypted"),masterKeyPair.privateKey=t,masterKeyPair.publicKey=encMasterKeyPair.publicKey,e(null)}),void 0))})},SocketClient.prototype.checkUsernameAvailability=function(e,a){var t=this,n=a;t.socket.on("availability-"+e,function(a){console.log("[socketClient.checkUsernameAvailability] Got availability callback");var o=a.available,r=a.error;r&&console.log("[socketClient.checkUsernameAvailability] There was an error while checking username availability"),t.socket.removeListener("availability-"+e),
n({available:o})}),t.socket.emit("checkUsernameAvailability",{username:e,socketCallback:"availability-"+e})},Array.prototype.contains=function(e){for(var a=0;a<this.length;a++)if(this[a]===e)return!0;return!1},Array.prototype.unique=function(){for(var e=[],a=0;a<this.length;a++)e.contains(this[a])||e.push(this[a]);return e},window.socketClient=new SocketClient;